@using CharacterCreator.ClassLibrary.Main.CharacterData
@using CharacterCreator.ClassLibrary.Main.CharacterClasses
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components

<div class="character-header">
    <h2 class="text-center mb-3">Character Information</h2>

    <!-- Persistent Data Section -->
    <div class="persistent-data mb-4">
        <h4>Persistent Data</h4>
        <div class="row">
            <!-- Column 1: Name, Species, Class -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Name:</label>
                    <InputText class="form-control" @bind-Value="Character.Name" />
                </div>
                <div class="form-group">
                    <label>Species:</label>
                    <InputText class="form-control" @bind-Value="Character.Species" />
                </div>
                <div class="form-group">
                    <label>Class:</label>
                    <select value="@Character.CharacterClass?.Name" @onchange="OnCharacterClassChanged" class="form-control d-inline-block" style="max-width: 300px;">                        
                        @foreach (var characterClass in characterClasses)
                        {
                            <option value="@characterClass">@characterClass</option>
                        }
                    </select>
                </div>
            </div>
            <!-- Column 2: Subclass, Background, Alignment -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Subclass:</label>
                    <input type="text" class="form-control" value="Arcane Tradition" readonly />
                </div>
                <div class="form-group">
                    <label>Background:</label>
                    <input type="text" class="form-control" value="Sage" readonly />
                </div>
                <div class="form-group">
                    <label>Alignment:</label>
                    <input type="text" class="form-control" value="Neutral Good" readonly />
                </div>
            </div>
            <!-- Column 3: Size, Speed -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Size:</label>
                    <input type="text" class="form-control" value="Medium" readonly />
                </div>
                <div class="form-group">
                    <label>Speed:</label>
                    <input type="number" class="form-control" value="30" readonly />
                </div>
            </div>
        </div>
    </div>

    <!-- Semi-Persistent Data Section -->
    <div class="semi-persistent-data">
        <h4>Semi-Persistent Data</h4>
        <div class="row">
            <!-- Column 1: Level, Armor Class, Max Hit Points -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Level:</label>
                    <InputNumber class="form-control" @bind-Value="Character.Level" />
                </div>
                <div class="form-group">
                    <label>Armor Class (AC):</label>
                    <input type="number" class="form-control" value="15" readonly />
                </div>
                <div class="form-group">
                    <label>Max Hit Points:</label>
                    <input type="number" class="form-control" value="50" readonly />
                </div>
            </div>
            <!-- Column 2: Current Hit Points, Hit Die, Max Hit Die -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Current Hit Points:</label>
                    <input type="number" class="form-control" value="50" readonly />
                </div>
                <div class="form-group">
                    <label>Hit Die:</label>
                    <input type="text" class="form-control" value="d8" readonly />
                </div>
                <div class="form-group">
                    <label>Max Hit Die:</label>
                    <input type="number" class="form-control" value="4" readonly />
                </div>
            </div>
            <!-- Column 3: Initiative, Passive Perception, Proficiency Bonus -->
            <div class="col-md-4">
                <div class="form-group">
                    <label>Initiative:</label>
                    <input type="number" class="form-control" value="2" readonly />
                </div>
                <div class="form-group">
                    <label>Passive Perception:</label>
                    <input type="number" class="form-control" value="12" readonly />
                </div>
                <div class="form-group">
                    <label>Proficiency Bonus:</label>
                    <input type="number" class="form-control" value="2" readonly />
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Character Character { get; set; }

    [Parameter]
    public EventCallback CharacterHeaderChanged { get; set; }

    public List<string> characterClasses = new()
    {
       // "Barbarian",
       // "Bard",
       // "Cleric",
       // "Druid",
       "Fighter",
       // "Monk",
       // "Paladin",
       // "Ranger",
       // "Rogue",
       // "Sorcerer",
       // "Warlock",
       "Wizard"
    };

    public async Task OnCharacterClassChanged(ChangeEventArgs e)
    {
        CharacterClass characterClass;
        var selectedClass = e.Value.ToString();

        characterClass = selectedClass switch
        {
            "Fighter" => new Fighter(),
            "Wizard" => new Wizard(),
            _ => new Fighter()
        };

        Character.CharacterClass = characterClass;
        await CharacterHeaderChanged.InvokeAsync();
    }
}
